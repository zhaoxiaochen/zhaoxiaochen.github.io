<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>为什么有这个博客</title>
    <url>/post/b5b0d746.html</url>
    <content><![CDATA[<!-- build time:Wed Dec 11 2019 13:04:14 GMT+0800 (中国标准时间) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>为什么有这个博客，想写博客很久了。在这之前使用过各种笔记工具，<strong>有道云笔记</strong>、<strong>OneNote</strong>等，都存在各种各样的问题。加之也一直想做一个博客，所以这个博客就重新诞生了，在这个博客之前也有一个旧版本，但是维护困难，故旧版本博客代码进行放弃维护，这里采用了<strong>Hexo</strong>+<strong>NEXT</strong>的结构模式进行开发。以及开发中涉及到的一些问题的备忘</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><ol><li><p>主要参考了,[Hexo+NexT 打造一个炫酷博客]( <a href="http://xyua.top/Hexo/hexo_next_blog.html" target="_blank" rel="noopener">http://xyua.top/Hexo/hexo_next_blog.html</a> 这篇博文，没有太懂脑子，直接无脑抄了过来，其中有两个修改的地方。</p></li><li><p>在集成过程中发现了一个local search 的一个缺陷，在点击搜索时每次都会打开一个新的页面。很是不方便。</p><p>需要修改模板，<strong>themes\next\layout\_partials\header.swig</strong>，一共需要修改两处</p><p><img src="https://raw.githubusercontent.com/zhaoxiaochen/zhaoxiaochen.github.io/master/assets/image-20191206175704949.png" alt="image-20191206175704949"></p></li><li><p>关于博客markdown文件插入图片时迁移问题为这个博客的静态文件托管在github上，但是如果想要迁到CSDN或其他渠道那么图片显示又是一个问题，这个网上有很多其他的方案，但是总感觉有点不适合我，那就直接用代码自己来解决一下。</p><p><strong>解决思路</strong></p><p>图片统一上传至github上，采用网络图片方式插入到md文件中。</p><p>需要解决：发布前把所有的图片链接修改为网络链接方式</p><p><strong>实施</strong></p><ol><li><p>我这里采用的Typora来写的markdown,Typora有一个功能就是截图或其他图片方式可以直接复制到指定文件中。这里我们把他设置为上级目录中的assets文件夹下。</p><ol><li>打开<strong>文件</strong>-&gt;<strong>偏好设置</strong>-&gt;<strong>图像</strong></li></ol><p><img src="https://raw.githubusercontent.com/zhaoxiaochen/zhaoxiaochen.github.io/master/assets/image-20191211111939496.png?raw=true" alt="image-20191211111939496"></p><ol start="2"><li><p>粘贴一张图片到md文件中会创建一个新的文件夹</p><p><img src="https://raw.githubusercontent.com/zhaoxiaochen/zhaoxiaochen.github.io/master/assets/image-20191211112055287.png?raw=true" alt="image-20191211112055287"></p></li></ol></li><li><p>然后我们修改发布脚本</p><ol><li><p>打开文件目录找到<strong>themes\next\scripts\merge-configs.js</strong></p><p><img src="https://raw.githubusercontent.com/zhaoxiaochen/zhaoxiaochen.github.io/master/assets/image-20191211112414037.png?raw=true" alt="image-20191211112414037"></p></li><li><p>实现hexo的生命周期方法<strong>deployBefore</strong>该方法会在执行<strong>hexo deploy</strong>前执行，新建该方法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo.on(<span class="string">'deployBefore'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr></table></figure></li><li><p>编写方法读取md文件，查找图片链接并修改为上传到github后的图片外链地址;</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> merge = <span class="built_in">require</span>(<span class="string">'./merge'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> FS = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> chalk = <span class="built_in">require</span>(<span class="string">'chalk'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> readline = <span class="built_in">require</span>(<span class="string">'readline'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> end = <span class="string">"?raw=true"</span>;<span class="comment">//外链后缀</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dirfath = <span class="string">'./source/_posts/'</span>;<span class="comment">//md文件的相对路径</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gitRemod = <span class="string">"https://github.com/zhaoxiaochen/zhaoxiaochen.github.io/blob/master/assets/"</span>;<span class="comment">//远程链接前缀地址</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//读取文件，并且替换文件中指定的字符串</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> replaceFile = <span class="function"><span class="keyword">function</span>(<span class="params">filePath</span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  read_file(filePath,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// 修改完后重写到文件中</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    FS.writeFile(filePath, data, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">return</span> err;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read_file</span>(<span class="params">path,callback</span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> fRead = FS.createReadStream(path);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> objReadline = readline.createInterface(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      input:fRead</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> arr = <span class="string">""</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  objReadline.on(<span class="string">'line'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">line</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(line)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="comment">// 匹配是否是图片md文件格式</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="keyword">let</span> imgUrl = line.match(<span class="regexp">/!\[.*\]\(([^)]*)\)/</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="keyword">if</span>(imgUrl )&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        imgUrl = imgUrl[<span class="number">1</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">let</span> remonUrl = imgUrl.replace(<span class="string">'../assets/'</span>,gitRemod)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(remonUrl.indexOf(end)===<span class="number">-1</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          remonUrl+=end</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        line = line.replace(imgUrl,remonUrl);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        hexo.log.info(imgUrl);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        hexo.log.info(<span class="string">"          ↓            "</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        hexo.log.info(chalk.magenta(remonUrl));</span></pre></td></tr><tr><td class="code"><pre><span class="line">        hexo.log.info(<span class="string">"\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        arr+=line+<span class="string">"\n"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        arr+=line+<span class="string">"\n"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      arr+=line+<span class="string">"\n"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  objReadline.on(<span class="string">'close'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="comment">// 读取完成回掉方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      callback(arr);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 上传前执行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> deploy_start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment">//遍历statics文件夹，找到main_*.js</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  FS.readdir(dirfath,<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(err)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> err;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(files.length !=<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        files.forEach(<span class="function">(<span class="params">el,item</span>)=&gt;</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="comment">//判断文件的状态，用于区分文件名/文件夹</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="keyword">const</span> path = dirfath+ el;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          FS.stat(path,<span class="function"><span class="keyword">function</span>(<span class="params">err,status</span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span>(err)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span> err;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">let</span> isFile = status.isFile();<span class="comment">//是文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">let</span> isDir = status.isDirectory();<span class="comment">//是文件夹</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span>(isFile)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">              <span class="keyword">if</span>(path.indexOf(<span class="string">'.md'</span>)!=<span class="number">-1</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                  hexo.log.info(<span class="string">"开始处理："</span>+path);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                  replaceFile(path);</span></pre></td></tr><tr><td class="code"><pre><span class="line">              &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span>(isDir)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="built_in">console</span>.log(<span class="string">"文件夹："</span>+path);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"> * Merge configs in _data/next.yml into hexo.theme.config.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"> * Note: configs in _data/next.yml will override configs in hexo.theme.config.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo.on(<span class="string">'generateBefore'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> (hexo.locals.get) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">var</span> data = hexo.locals.get(<span class="string">'data'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    hexo.log.warn(data)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> ( data &amp;&amp; data.next ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="keyword">if</span> ( data.next.override ) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        hexo.theme.config = data.next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        merge(hexo.theme.config, data.next);</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo.on(<span class="string">'generateAfter'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.warn(<span class="string">"==============================================================="</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.warn(<span class="string">"========================= ATTENTION! =========================="</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.warn(<span class="string">"==============================================================="</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.warn(<span class="string">" NexT repository is moving here: https://github.com/theme-next "</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.warn(<span class="string">"==============================================================="</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.warn(<span class="string">" It's rebase to v6.0.0 and future maintenance will resume there"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.warn(<span class="string">"==============================================================="</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo.on(<span class="string">'deployBefore'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="string">"\n"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.info(<span class="string">"开始处理Markdown的图片链接到远程"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  hexo.log.info(<span class="string">"远程==&gt;"</span>+gitRemod);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  deploy_start();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;)</span></pre></td></tr></table></figure></li></ol></li></ol></li><li><p>这样配置完成后每次发布完成md的图片都会采用外链形式访问github上的图片，但是github上貌似有文件存储限制，这一块可以暂时这样用，后续就不行啦。再想想其他办法</p></li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
</search>
